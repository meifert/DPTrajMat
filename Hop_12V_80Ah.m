% model inizialisation file
%
% version 1.0 ;  09.05.02 ;  BU 
%
% In diesem ini-file sind alle Werte auf 1 Zelle, 1 Ah und Nennstrom bezogen !
% 
% 
% 60 Ah version, created by S. Ploumen, FFA Energy Management, 22.09.04
%
%-------   "in_values"   ------------------------------------------------------

battery.phi_in = [0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 0.99 1];

battery.SOC_in = [0 20 40 70 90 100];

battery.temp_in = [-25 -15 0 27 40];

%-------   default values   ----------------------------------------------------

battery.U_T     = 0.026; %(V)

battery.F       = 26.80556; %(Ah/mol) Faraday-Konstante F

battery.R       = 8.31434; %(J/mol*K) Gaskonstante

%-------   gassing reaction   -------------------------------------------------

battery.I_gas_0 = 1.27527E-9; % (A), bezogen auf 1 Ah

battery.I_gas_0_ini = battery.I_gas_0*20;% (A), bezogen auf Nennstrom

battery.U_gas_0 = 1.22; % (V)

battery.k_gas_1 = (1/0.2)*log(10); % (1/V)

battery.k_gas_2 = (1/10)*log(2); % (1/K)

battery.temp_gas_0 = 25; %(°K)

%-------   parameter lut´s = fct(soc)   ----------------------------------------
%Werte für 100% und 0% extrapoliert

battery.nom_volt = 12; % (V) zur Ermittlung der Zellenzahl (hier 6)
 
battery.nom_cap    = 80; %(Ah)

battery.effect_cap = 80; %(Ah)

battery.SOCmin = [70 40 20 0 0]; %minimaler SOC in Abh. der Temperatur

battery.up_lim_soc_calc  = ((100 - battery.init_SOC)/100)*battery.effect_cap*3600;  %(As)      

battery.low_lim_soc_calc = (-1)*(battery.init_SOC/100)*battery.effect_cap*3600; %(As)
 
battery.M_el = 0.005782; % (kg), bezogen auf 1 Ah

battery.M_el_ini = battery.M_el*20; % (kg), bezogen auf Nennstrom

battery.m_Battvoll = 7.0; % (mol/kg)

battery.R_ser = [100.0 10.0 1.0 0.022 0.02 0.02 ; 10.0 1.0 0.025 0.0166 0.0158 0.0158;
         1.0 0.025 0.0175 0.015 0.0142 0.0142 ; 0.1 0.018 0.0145 0.0127 0.0125 0.0125;
         0.1 0.016 0.0137 0.0125 0.0124 0.0124];  

battery.R_ser_bez = [152.7 15.27 1.527 0.0336 0.0305 0.0305 ; 15.27 1.527 0.0382 0.02536 0.02414 0.02414;
             1.527 0.03819 0.0267 0.0229 0.0217 0.0217; 0.1527 0.0275 0.0222 0.0194 0.0191 0.0191;
             0.1527 0.0244 0.0209 0.0191 0.0189 0.0189];  % bezogen auf 1 Zelle und 1 Ah

%R_ser_ini = [7.635 0.7635 0.07635 0.00168 0.00153 0.00153 ; 0.7635 0.07635 0.00191 0.001268 0.001207 0.001207;
%            0.07635 0.00191 0.00134 0.00115 0.00109 0.00109; 0.00764 0.00138 0.00111 0.00097 0.000955 0.000955;
%             0.00764 0.00122 0.00105 0.000955 0.000945 0.000945];  % bezogen auf 1 Zelle und Nennstrom 

battery.R_ser_ini = battery.R_ser_bez/20; %bezogen auf 1 Zelle und Nennstrom

battery.L     = [ 3.00E-07 3.00E-07 3.00E-07 3.0E-07 3.0E-07 3.0E-07 ; 3.00E-07 3.00E-07 3.00E-07 3.0E-07 3.0E-07 3.0E-07 ;
          3.00E-07 3.00E-07 3.00E-07 3.0E-07 3.0E-07 3.0E-07 ; 3.00E-07 3.00E-07 3.00E-07 3.0E-07 3.0E-07 3.0E-07 ;
          3.00E-07 3.00E-07 3.00E-07 3.0E-07 3.0E-07 3.0E-07];   

battery.L_bez = [ 6.06E-10 6.06E-10 6.06E-10 6.06E-10 6.06E-10 6.06E-10 ; 6.06E-10 6.06E-10 6.06E-10 6.06E-10 6.06E-10 6.06E-10 ; 
          6.06E-10 6.06E-10 6.06E-10 6.06E-10 6.06E-10 6.06E-10 ; 6.06E-10 6.06E-10 6.06E-10 6.06E-10 6.06E-10 6.06E-10 ;
          6.06E-10 6.06E-10 6.06E-10 6.06E-10 6.06E-10 6.06E-10]; % bezogen auf 1 Zelle und 1 Ah  
          % L wächst mit größerer Bauform der Batterie - hier wird die Kapazität als Bezug verwendet

battery.L_ini = [ 1.212E-8 1.212E-8 1.212E-8 1.212E-8 1.212E-8 1.212E-8 ; 1.212E-8 1.212E-8 1.212E-8 1.212E-8 1.212E-8 1.212E-8 ;
          1.212E-8 1.212E-8 1.212E-8 1.212E-8 1.212E-8 1.212E-8 ; 1.212E-8 1.212E-8 1.212E-8 1.212E-8 1.212E-8 1.212E-8 ;
          1.212E-8 1.212E-8 1.212E-8 1.212E-8 1.212E-8 1.212E-8]; % bezogen auf 1 Zelle und Nennstrom  
      
battery.phi_1 = [ 0.65 0.65 0.65 0.65 0.67 0.67 ; 0.6 0.6 0.6 0.7 0.7 0.7 ; 0.55 0.55 0.67 0.75 0.75 0.75;
          0.65 0.65 0.65 0.7 0.75 0.75 ; 0.66 0.66 0.66 0.675 0.72 0.72];

battery.phi_2 = [ 0.85 0.85 0.85 0.85 0.85 0.85 ; 0.85 0.85 0.85 0.85 0.95 0.95 ; 0.8 0.8 0.85 0.85 0.875 0.875 ;
          0.725 0.725 0.825 0.87 0.87 0.87; 0.7 0.7 0.775 0.86 0.88 0.88];

%-------   tanh - fit ----------------------------------------------------------

battery.a = [ 0.06 0.06 0.06 0.06 0.1 0.1 ; 0.046 0.046 0.046 0.06 0.1 0.1 ; 0.026 0.026 0.024 0.03 0.12 0.12 ;
      0.012 0.012 0.010 0.011 0.022 0.022 ; 0.009 0.009 0.009 0.011 0.02 0.02];  
  
battery.a_bez = [ 0.0916 0.0916 0.0916 0.0916 0.1527 0.1527 ; 0.0703 0.0703 0.0703 0.0917 0.1527 0.1527 ;
          0.0397 0.0397 0.0367 0.0458 0.1833 0.1833 ; 0.0183 0.0183 0.0153 0.0168 0.0336 0.0336 ;
          0.0137 0.0137 0.0137 0.0168 0.0306 0.0306]; % bezogen auf 1 Zelle und 1 Ah
      
%a_ini = [ 0.00458 0.00458 0.00458 0.00458 0.00764 0.00764 ; 0.00352 0.00352 0.00352 0.00459 0.00764 0.00764 ;
%          0.00199 0.00199 0.00199 0.00229 0.00917 0.00917 ; 0.000915 0.000915 0.000765 0.00084 0.00168 0.00168 ;
%          0.000685 0.000685 0.000685 0.00084 0.00153 0.00153]; % bezogen auf 1 Zelle und Nennstrom

battery.a_ini = battery.a_bez/20; %bezogen auf 1 Zelle und Nennstrom
      
battery.b = [ 0.053 0.053 0.053 0.053 0.093 0.093 ; 0.035 0.035 0.035 0.053 0.093 0.093 ; 0.021 0.021 0.02 0.026 0.116 0.116 ;
      0.009 0.009 0.007 0.008 0.019 0.019 ; 0.006 0.006 0.006 0.008 0.017 0.017];
  
battery.b_bez = [ 0.0810 0.0810 0.0810 0.0810 0.1421 0.1421 ; 0.0535 0.0535 0.0535 0.0810 0.1421 0.1421 ;
          0.0321 0.0321 0.0306 0.0400 0.1772 0.1772 ; 0.01375 0.01375 0.0107 0.0122 0.0290 0.0290 ; 
          0.0092 0.0092 0.0092 0.0122 0.0260 0.0260]; % bezogen auf 1 Zelle und 1 Ah

battery.b_ini = battery.b_bez/20; % bezogen auf 1 Zelle und Nennstrom

battery.c = [ 0.1 0.1 0.1 0.1 0.15 0.15 ; 0.1 0.1 0.1 0.1 0.15 0.15 ; 0.1 0.1 0.1 0.08 0.15 0.15 ;
      0.03 0.03 0.03 0.03 0.07 0.07 ; 0.03 0.03 0.03 0.03 0.07 0.07];

battery.c_bez = [ 0.1375 0.1375 0.1375 0.1375 0.2063 0.2063 ; 0.1375 0.1375 0.1375 0.1375 0.2063 0.2063 ;
          0.1375 0.1375 0.1375 0.1100 0.2063 0.2063 ; 0.04125 0.04125 0.04125 0.04125 0.09625 0.09625 ;
          0.04125 0.04125 0.04125 0.04125 0.09625 0.09625]; %auf Nennstrom bezogen

battery.c_ini = battery.c_bez;

battery.d = [0 0 0 0 0 0 ; 0 0 0 0 0 0 ; 7 7 5 3 0 0 ; 10 10 10 10 10 10 ; 10 10 10 10 10 10];

battery.d_bez = [ 0 0 0 0 0 0 ; 0 0 0 0 0 0 ; 5.1 5.1 3.6 2.2 0 0 ; 7.3 7.3 7.3 7.3 7.3 7.3 ;
          7.3 7.3 7.3 7.3 7.3 7.3]; % auf Nennstrom bezogen

battery.d_ini = battery.d_bez;      

%-------   konstante um A_1 zu berechnen fct(soc)   ------------------------
battery.e = [0.6 0.6 0.6 0.6 0.8 0.8 ; 0.65 0.65 0.65 0.7 1.02 1.02 ; 0.55 0.55 0.55 0.55 0.9 0.9 ;
     0.45 0.45 0.6 0.7 1 1 ; 0.45 0.45 0.55 0.8 1 1];
 
battery.e_bez = [0.393 0.393 0.393 0.393 0.523 0.523 ; 0.425 0.425 0.425 0.458 0.667 0.667 ; 0.36 0.36 0.36 0.36 0.589 0.589 ;
         0.295 0.295 0.393 0.458 0.655 0.655 ; 0.295 0.295 0.360 0.524 0.655 0.655]; % bezogen auf 1 Zelle und 1 Ah

battery.e_ini = battery.e_bez*20; %bezogen auf 1 Zelle und Nennstrom
     
battery.C_1eff = [0.456 0.456 0.456 0.456 0.718 0.718 ; 0.488 0.488 0.488 0.601 1.03 1.03 ; 0.337 0.337 0.41 0.451 0.869 0.869 ; 
          0.293 0.293 0.455 0.6 1.0 1.0 ; 0.298 0.298 0.404 0.718 1 1];

battery.C_1eff_bez = [0.298 0.298 0.298 0.298 0.470 0.470 ; 0.320 0.320 0.320 0.393 0.674 0.674 ; 0.221 0.221 0.268 0.295 0.569 0.569 ; 
              0.192 0.192 0.298 0.393 0.655 0.655 ; 0.195 0.195 0.264 0.470 0.655 0.655]; % bezogen auf 1 Zelle und 1 Ah

battery.C_1eff_ini = battery.C_1eff_bez*20; %bezogen auf 1 Zelle und Nennstrom

 %-------   Butler-Volmer fit   -------------------------------------------------
battery.n       = 2;

battery.alpha = [ 0.15 0.15 0.15 0.15 0.15 0.15 ; 0.2 0.2 0.2 0.2 0.2 0.2 ; 0.3 0.3 0.3 0.25 0.2 0.2 ;
          0.35 0.35 0.35 0.3 0.25 0.25 ; 0.35 0.35 0.35 0.35 0.25 0.25];

battery.I_0   = [ 0.34 0.34 0.34 0.34 0.34 0.238 ; 0.38 0.38 0.38 0.23 0.23 0.161 ; 0.37 0.37 0.35 0.35 0.39 0.273 ;
          0.75 0.75 0.75 0.8 0.42 0.294 ; 1.1 1.1 1 0.9 0.68 0.476];

battery.I_0_bez = [0.2473 0.2473 0.2473 0.2473 0.2473 0.1731 ; 0.2764 0.2764 0.2764 0.1673 0.1673 0.1171;
           0.2691 0.2691 0.2545 0.2545 0.2836 0.1985 ; 0.5455 0.5455 0.5455 0.5818 0.3055 0.2138;
           0.8 0.8 0.7273 0.6545 0.4646 0.3462]; % bezogen auf Nennstrom
       
battery.I_0_ini = battery.I_0_bez;       
       
%-------   Konstante um A_2 zu berechnen   -------------------------------------
battery.f =  [350 350 350 350 650 650 ; 250 250 250 430 1100 1100 ; 175 175 250 250 375 375 ;
      125 125 275 500 500 500 ; 125 125 200 400 375 400];

battery.f_bez = [12.73 12.73 12.73 12.73 23.64 23.64 ; 9.1 9.1 9.1 15.64 40 40; 6.36 6.36 9.1 9.1 13.64 13.64 ;
         4.54 4.54 10 18.2 18.2 18.2 ; 4.54 4.54 7.27 14.55 13.64 14.55]; % bezogen auf 1 Zelle und 1 Ah
     
battery.f_ini = battery.f_bez*20; % bezogen auf 1 Zelle und Nennstrom     

battery.C_2eff =[984 984 984 984 2004 2004 ; 662 662 662 1250 1590 1590 ; 636 636 662 662 874 874 ;
         780 780 905 1270 1270 1270 ; 990 990 931 1060 841 841];     

battery.C_2eff_bez = [35.78 35.78 35.78 35.78 72.87 72.87 ; 24.1 24.1 24.1 45.45 57.8 57.8 ; 23.13 23.13 24.07 24.07 31.78 31.78;
              28.36 28.36 32.91 46.18 46.18 46.18 ; 36 36 33.85 38.55 30.60 30.60]; % bezogen auf 1 Zelle und 1 Ah
          
battery.C_2eff_ini = battery.C_2eff_bez*20; % bezogen auf 1 Zelle und Nennstrom

% -------   factor lut´s = fct(phi)          -------------------------------------

% Werte Freq2 und Freq1 für alternative 5 RC Annäherung ZARC 2, derzeit nur bis Phi2=0.6 Werte vorhand.

battery.Freq2=[ 20.342 20.342 20.342 20.342 20.342 14.347 10.451 7.791 5.802 4.104 2.898 2.006 1.351 1];
battery.Freq1=[2.436 2.436 2.436 2.436 2.436 2.035 1.702 1.389 1 1 1 1 1 1];

% Werte Freq2 und Freq1 für alternative 3 RC Annäherung ZARC 2, derzeit nur bis Phi2=0.6 Werte vorhand.
% danach 3 RC Annäherung nicht mehr sinnvoll

battery.Freq1_3=[8.69 8.69 8.69 8.69 8.694 6.606 5.143 4.084 3.291 2.669 2.152 1.683 1.253 1];


%%%% added by S. Ploumen
% Zarc 1 bevariour description for simplified model: (linearity between zarc 1 voltage and battery current for both charge and discharge)
% for 60 Ah!!

battery.zarc1_linearity = [ ...
% current   voltage
  -79.7733   -0.1290
  -59.8237   -0.1199
  -39.8741   -0.1101
  -19.9244   -0.1010
  -10.7053   -0.0953
   -7.5315   -0.0386
    0.0252   -0.0009
   14.5340    0.0730
   30.4030    0.1527
   39.6222    0.1929
   59.5592    0.2921];

